import { ISuperState } from '@superstate/core';
/**
 * A React hook that re-renders the component when a superstate changes.
 *
 * @param ss - The `superstate` instance.
 * @param options.target - (default: `undefined`) The target to monitor. If not specified, whenever either `now` or `draft` changes, the component will re-render.
 *
 * @returns `null`
 */
export declare function useSuperState<S>(ss: Pick<ISuperState<S>, 'subscribe' | 'now' | 'draft'>, options?: IUseSuperStateOptions): null;
interface IUseSuperStateOptions {
    /**
     * The target to monitor. If not specified, whenever either `now` or `draft` changes, the component will re-render.
     */
    target: 'now' | 'draft';
}
export {};
