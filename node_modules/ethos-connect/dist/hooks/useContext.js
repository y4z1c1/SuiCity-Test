import{useCallback as M,useEffect as f,useMemo as d,useState as O}from"react";import b from"../lib/lib.js";import W from"../lib/log.js";import k from"./useAccount.js";import F from"./useConnect.js";import{EthosConnectStatus as c}from"../enums/EthosConnectStatus.js";import{DEFAULT_NETWORK as v,DEFAULT_CHAIN as J}from"../lib/constants.js";const w={network:v,chain:J,walletAppUrl:"https://ethoswallet.xyz"},L=({configuration:o,onWalletConnected:C})=>{const[t,T]=O({...w,...o}),[r,a]=O(!1),g=M(n=>{W("EthosConnectProvider","EthosConnectProvider Configuration:",n);const e={...w,...n};b.initializeEthos(e),T(i=>JSON.stringify(e)!==JSON.stringify(i)?e:i)},[]);f(()=>{b.initializeEthos(t)},[t]),f(()=>{!o||JSON.stringify(t)!==JSON.stringify(o)&&g(o)},[t,o]);const U=M(n=>{a(!1),C&&C(n)},[C]),{wallets:p,connect:A,clientAndSigner:s,getState:I}=F(t,U),{account:{address:m,contents:h},altAccount:E,setAltAccount:x}=k(s.signer,t?.network??v,t?.pollingInterval,t?.invalidPackages),y=d(()=>({isModalOpen:r,openModal:()=>{a(!0)},closeModal:()=>{a(!1)}}),[r,a]),S=d(()=>{const{client:n,signer:e}=s,i=I();let l;e?.type==="hosted"?l=c.Connected:i.isConnecting?l=c.Loading:n&&i.isConnected&&e?l=c.Connected:l=c.NoConnection;const N={status:l,wallets:p.map(u=>({...u,name:u.name,icon:u.icon})),selectWallet:A,client:n,altAccount:E,setAltAccount:x};return e&&m&&(N.wallet={...e,address:m,contents:h}),N},[p,A,m,E,x,s,h,t]);return f(()=>{r?document.getElementsByTagName("html").item(0)?.setAttribute("style","overflow: hidden;"):document.getElementsByTagName("html").item(0)?.setAttribute("style","")},[r]),{...d(()=>({wallet:S,modal:y,clientAndSigner:s}),[S,y,s]),ethosConfiguration:t,init:g}};var et=L;export{et as default};
