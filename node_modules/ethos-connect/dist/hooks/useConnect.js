import{useCallback as p,useEffect as c,useMemo as k,useRef as A,useState as y}from"react";import u from"../lib/log.js";import w from"./useWalletKit.js";import K from"../lib/lib.js";import{DEFAULT_CHAIN as C,DEFAULT_NETWORK as D}from"../lib/constants.js";import{WalletKitCoreConnectionStatus as N}from"@mysten/wallet-kit-core";import{SuiClient as T}from"@mysten/sui.js/client";const W=(n,d)=>{const r=A(!1),i=A({ethos:!1,extension:!1}),l=k(()=>{const e=typeof n?.network=="string"?n.network:D;return new T({url:e})},[n]),[f,m]=y({client:null,signer:null}),{wallets:b,status:a,signer:g,getState:o,connect:h}=w({client:l,defaultChain:n?.chain??C,preferredWallets:n?.preferredWallets,disableAutoConnect:n?.disableAutoConnect}),E=p(()=>{r.current=!1,i.current={ethos:!1,extension:!1},m(e=>({...e,signer:null}))},[]);c(()=>{r.current=!1,i.current={ethos:!1,extension:!1}},[n]),c(()=>{const{client:e,signer:t}=f;if(!e&&!t)return;const S=o();S.isConnecting||S.isError||d&&d(f)},[a,f,d,o]);const s=p((e,t)=>{if(u("useConnect","trying to set clientAndSigner",t,r.current,i.current),r.current)return;t&&(i.current[t]=!0);const S=!Object.values(i.current).includes(!1);if(!(!e&&!S)){if(r.current=!!e,e){const x=e?.disconnect;e.disconnect=()=>{x(),E()}}m({client:l,signer:e})}},[l,E]);return c(()=>{a===N.DISCONNECTED&&(i.current.extension=!1,r.current=!1,m(e=>({...e,signer:null})))},[a]),c(()=>{!n||u("mobile","listening to mobile connection from EthosConnectProvider")},[s,n]),c(()=>{if(!n)return;const e=o();u("useConnect","Setting clientAndSigner extension",e),!(e.isConnecting||e.isError)&&s(g,"extension")},[a,o,s,g,n]),c(()=>{if(!n)return;if(!n.apiKey){u("useConnect","Setting null clientAndSigner ethos"),s(null,"ethos");return}(async()=>{const t=await K.getEthosSigner({client:l,defaultChain:n.chain??C});u("useConnect","Setting clientAndSigner ethos",t),s(t,"ethos")})()},[l,s,n]),{wallets:b,clientAndSigner:f,connect:h,getState:o}};var B=W;export{B as default};
