import{useCallback as c,useEffect as M,useMemo as P,useRef as W,useSyncExternalStore as b}from"react";import{createWalletKitCore as K}from"@mysten/wallet-kit-core";import{SignerType as C}from"../types/Signer.js";import{DEFAULT_CHAIN as u}from"../lib/constants.js";const N=({defaultChain:r,client:i,preferredWallets:h,storageAdapter:k,storageKey:T,disableAutoConnect:B})=>{const s=W(null);s.current||(s.current=K({preferredWallets:h,storageAdapter:k,storageKey:T}));const{wallets:l,status:g,currentWallet:t,accounts:p,currentAccount:n}=b(s.current.subscribe,s.current.getState,s.current.getState);M(()=>{B||s.current?.autoconnect()},[g,l]);const{autoconnect:O,...y}=s.current,m=c(e=>{if(!t||!n)throw new Error("No wallet connect to sign message");const o=e.account||n,a=e.chain||r||u;return t.features["sui:signAndExecuteTransactionBlock"].signAndExecuteTransactionBlock({...e,account:o,chain:a})},[t,n,r]),S=c(e=>i.executeTransactionBlock(e),[i]),w=c(e=>{if(!t||!n)throw new Error("No wallet connect to sign message");const o=e.account||n,a=e.chain||r||u;return t.features["sui:signTransactionBlock"].signTransactionBlock({...e,account:o,chain:a})},[t,n,r]),f=c(e=>{if(!t||!n)throw new Error("No wallet connect to sign message");const o=e.account||n,a=typeof e.message=="string"?new TextEncoder().encode(e.message):e.message,A=async I=>{const d=await t.features["sui:signMessage"]?.signMessage(I);return{...d,bytes:d?.messageBytes}};return(t.features["sui:signPersonalMessage"]?.signPersonalMessage??A)({...e,message:a,account:o})},[t,n]),E=c(async e=>{if(!t||!n)throw new Error("No wallet connect to preapprove transactions");const o=window.ethosWallet;return!o||["Ethos Wallet","Ethos Mobile"].indexOf(t.name)===-1?(console.log("Wallet does not support preapproval"),!1):(e.address||(e.address=n.address),e.chain||(e.chain=r??u),o.requestPreapproval(e))},[t,n,r]),x=P(()=>!t||!n?null:{type:C.Extension,name:t.name,icon:t.icon,getAddress:async()=>n?.address,accounts:p,currentAccount:n,signAndExecuteTransactionBlock:m,executeTransactionBlock:S,signTransactionBlock:w,requestPreapproval:E,signPersonalMessage:f,disconnect:()=>{s.current?.disconnect()},client:i},[t,p,n,m,S,E,f,i]);return{wallets:l,status:g,signer:x,...y}};var ae=N;export{ae as default};
