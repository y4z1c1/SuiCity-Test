import type { StorageAdapter } from '@mysten/wallet-kit-core';
import { ExtensionSigner } from '../types/Signer';
import { Chain } from 'enums/Chain';
import { SuiClient } from '@mysten/sui.js/client';
import { SuiSignPersonalMessageOutput, SuiSignTransactionBlockOutput, SuiSignMessageInput } from '@mysten/wallet-standard';
export interface UseWalletKitArgs {
    defaultChain: Chain;
    client: SuiClient;
    features?: string[];
    enableUnsafeBurner?: boolean;
    preferredWallets?: string[];
    storageAdapter?: StorageAdapter;
    storageKey?: string;
    disableAutoConnect?: boolean;
}
declare const useWalletKit: ({ defaultChain, client, preferredWallets, storageAdapter, storageKey, disableAutoConnect }: UseWalletKitArgs) => {
    getState(): import("@mysten/wallet-kit-core").WalletKitCoreState;
    subscribe(handler: import("@mysten/wallet-kit-core").SubscribeHandler): import("@mysten/wallet-kit-core").Unsubscribe;
    connect(walletName: string, connectInput?: import("@mysten/wallet-standard").StandardConnectInput | undefined): Promise<void>;
    selectAccount(account: import("@mysten/wallet-standard").WalletAccount): void;
    disconnect(): Promise<void>;
    signMessage(messageInput: Omit<SuiSignMessageInput, "account"> & Partial<Pick<SuiSignMessageInput, "account">>): Promise<import("@mysten/wallet-standard").SuiSignMessageOutput>;
    signPersonalMessage(messageInput: Omit<import("@mysten/wallet-standard").SuiSignPersonalMessageInput, "account"> & Partial<Pick<import("@mysten/wallet-standard").SuiSignPersonalMessageInput, "account">>): Promise<SuiSignPersonalMessageOutput>;
    signTransactionBlock: (transactionInput: Omit<import("@mysten/wallet-standard").SuiSignTransactionBlockInput, "account" | "chain"> & Partial<Pick<import("@mysten/wallet-standard").SuiSignTransactionBlockInput, "account" | "chain">>) => Promise<SuiSignTransactionBlockOutput>;
    signAndExecuteTransactionBlock: (transactionInput: Omit<import("@mysten/wallet-standard").SuiSignAndExecuteTransactionBlockInput, "account" | "chain"> & Partial<Pick<import("@mysten/wallet-standard").SuiSignAndExecuteTransactionBlockInput, "account" | "chain">>) => Promise<import("@mysten/wallet-standard").SuiSignAndExecuteTransactionBlockOutput>;
    wallets: import("@mysten/wallet-standard").WalletWithSuiFeatures[];
    status: import("@mysten/wallet-kit-core").WalletKitCoreConnectionStatus;
    signer: ExtensionSigner | null;
};
export default useWalletKit;
